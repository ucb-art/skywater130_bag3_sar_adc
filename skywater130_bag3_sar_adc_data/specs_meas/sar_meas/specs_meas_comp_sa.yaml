meas_name: 'tb_comp'
meas_class: skywater130_bag3_sar_adc.measurement.comparator.ComparatorMM

impl_lib: AAA_Comp_SA
impl_cell: tb_comp_delay_test
dut_class: skywater130_bag3_sar_adc.layout.sar_comp.SARCompCore
root_dir: gen_outputs/sar_comp_meas

gen_specs_file: 'skywater130_bag3_sar_adc/skywater130_bag3_sar_adc_data/specs_gen/sar_lay/specs_comp_sa.yaml'

meas_params:
  analysis: ['delay'] #'noise'
  swp_info:
   {}
    # v_vcm: # these are the parameters you sweep across
    #   type: 'LINEAR'
    #   start: 0.5
    #   stop: 1
    #   num: 6
    # c_load: # these are the parameters you sweep across
    #   type: 'LINEAR'
    #   start: 1e-15
    #   stop: 1e-8
    #   num: 2
#    v_dm:
#      type: 'LOG'
#      start: 0.1
#      stop: 1e-8
#      num: 10
  tbm_specs:
    sim_envs:
      - tt_25
    save_outputs: ['VDD', 'VSS', 'outn', 'outp', 'inn', 'inp', 'clk','XDUT/outn', 'XDUT/outp']
    tran_options:
      maxstep: 1.0e-12
      errpreset: conservative
    pnoise_options:
      errpreset: conservative
      # start: 10000
      # stop: 250000000
      pnoisemethod: fullspectrum
      measurement:
        -
          trig_p: outp
          trig_n: VSS
          triggerthresh: 'v_VDD/2'
          triggernum: 1
          triggerdir: rise
          targ_p: outp
          targ_n: VSS
    pss_options:
      harms: 11
      errpreset: conservative
    sim_params:
      t_sim: '10*t_per'
      t_rf: 20e-12
      t_per: 10e-9
      v_vcm: 1
      v_dm: 1e-3
      c_load: 1e-15
      vdd: 1.8
      v_VDD: 1.8
      v_VSS: 0
    pwr_domain:
      inn: !!python/tuple ['VDD', 'vcm-v_dm/2']
      inp: !!python/tuple ['VDD', 'vcm+v_dm/2']
      outn: !!python/tuple ['VSS', 'VDD']
      outp: !!python/tuple ['VSS', 'VDD']
      clk: !!python/tuple ['VSS', 'VDD']
    sweep_options:  # this for pnoise test
      type: 'LOG'
      start: 10000
      stop: 250000000
      num: 20
    fund: 100e6
    probe_info_list:
      -
        - 'outp'
        - 'outn'
    sup_values:
      VDD: 1.8
      VSS: 0.0
    load_list:
      - pin: 'outn'
        type: 'cap'
        value: 'c_load'
      - pin: 'outp'
        type: 'cap'
        value: 'c_load'
    src_list:
      - type: vpulse
        lib: analogLib
        value: 
          v1: 'v_VDD'
          v2: 'v_VSS'
          period: 't_per'
          rise: 't_rf'
        conns: {PLUS: clk, MINUS: VSS}
    pulse_list:
      - pin: 'clk'
        tper: 't_per'
        tpw: '0.5*t_per-t_rf'
        trf: 't_rf'
        pos: False
        td_after_rst: False
  noise_in_stimuli:
    - type: vdc
      lib: analogLib
      value: 
        vdc: 'v_vcm-v_dm'
      conns: {PLUS: inn, MINUS: VSS}
    - type: vdc
      lib: analogLib
      value: 
        vdc: 'v_vcm+v_dm'
        pacm: '1'
      conns: {PLUS: inp, MINUS: VSS}
  delay_stimuli:
    - pin: 'inn'
      td: '2*t_per'
      tper: 't_per'
      tpw: '0.5*t_per-t_rf'
      trf: 't_rf'
      td_after_rst: False
    - pin: 'inp'
      td: '2*t_per'
      tper: 't_per'
      tpw: '0.5*t_per-t_rf'
      trf: 't_rf'
      td_after_rst: False
  # noise_in_stimuli:
  #   - pin: 'inn'
  #     td: '2*t_per'
  #     tper: 't_per'
  #     tpw: '0.5*t_per-t_rf'
  #     trf: 't_rf'
  #     td_after_rst: False
  #   - pin: 'inp'
  #     td: '2*t_per'
  #     tper: 't_per'
  #     tpw: '0.5*t_per-t_rf'
  #     trf: 't_rf'
  #     td_after_rst: False
  #   # - src_type: 'vdc'
  #   #   pin: 'inn'
  #   #   table:
  #   #     vdc: 'v_cm-v_dm/2'
  #   # - src_type: 'vdc'
  #   #   pin: 'inp'
  #   #   gnd: 'inn'
  #   #   table:
  #   #     vdc: 'v_dm'
  #   #     pacm: '1'


